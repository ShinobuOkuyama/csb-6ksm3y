{"mappings":"ACuGA,KAAM,CAAC,EAAM,EAAI,CALC,CAAC,UAAW,GAAG,CAM3B,EAAW,CAAC,GAAG,EAAE,EAAK,MAAM,EAAE,EAAI,GAAG,CAAC,CAC5C,QAAQ,GAAA,CAAI,GAMZ,QAAQ,GAAA,CADgB","sources":["<anon>","src/index.mjs"],"sourcesContent":["var $761f97bf09d51d3e$exports = {};\n/**\n * const, ret 等の変数宣言\n */ // var val1=\"var変数\";\n// console.log(val1);\n// // var変数は上書き可能\n// val1=\"var変数を上書き\";\n// console.log(val1);\n// // var変数は再宣言可能\n// var val1=\"var変数を再宣言\";\n// console.log(val1);\n// let val2 = \"let変数\";\n// console.log(val2);\n// // letは上書きが可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n// // // letは再宣言不可能\n// // let val2=\"let再宣言\";\n// const val3 = \"const変数\";\n// console.log(val3);\n// // constは上書きが不可能\n// val3 = \"const変数を上書き\";\n// console.log(val3);\n// constで定義したオブジェクトはプロパティの変更が可能\n// const val4 = {\n//   name: \"Shinobi\",\n//   age: 41,\n// }\n// val4.name=\"しのぶ\";\n// val4.address = \"Kanagawa\"\n// console.log(val4);\n// constで定義した配列はプロパティの変更が可能\n// const val5=[\"dog\",\"cat\"];\n// val5[0]=\"bird\";\n// val5.push(\"monkey\");\n// console.log(val5);\n/**\n * テンプレート文字列\n */ // const name=\"shinobi\";\n// const age=41;\n// // 「私の名前はshinobiです。年齢は41歳です。」\n// // 従来の方法\n// // const mesasge1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"歳です。\";\n// // console.log(mesasge1);\n// // テンプレート文字列を用いた方法\n// const mesasge2 = `私の名前は${name}です。年齢は${age}歳です。`;\n// console.log(mesasge2);\n/**\n * アロー関数\n */ // 従来の関数\n// function func1(str) {\n//   return str;\n// }\n// const func1 = function(str) {\n//   return str;\n// }\n// console.log(func1(\"func1です\"));\n// // アロー関数\n// const func2 = str => str;\n// console.log(func2(\"func2です。\"));\n// const func3 = (num1,num2) => {\n//   return num1+num2;\n// }\n// console.log(func3(10,20));\n/**\n * 分割代入\n */ // const myProfile={\n//     name: \"shinobi\",\n//     age: 41,\n// };\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\nconst $761f97bf09d51d3e$var$myProfile = [\n    \"shinobi\",\n    41\n];\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\nconst [$761f97bf09d51d3e$var$name, $761f97bf09d51d3e$var$age] = $761f97bf09d51d3e$var$myProfile;\nconst $761f97bf09d51d3e$var$message4 = `名前は${$761f97bf09d51d3e$var$name}です。年齢は${$761f97bf09d51d3e$var$age}です。`;\nconsole.log($761f97bf09d51d3e$var$message4);\n/**\n * 三項演算子\n */ const $761f97bf09d51d3e$var$test1 = \"100が勝っている。\";\nconsole.log($761f97bf09d51d3e$var$test1);\n\n\n//# sourceMappingURL=index.fce677da.js.map\n","/**\n * const, ret 等の変数宣言\n */\n// var val1=\"var変数\";\n// console.log(val1);\n\n// // var変数は上書き可能\n// val1=\"var変数を上書き\";\n// console.log(val1);\n\n// // var変数は再宣言可能\n// var val1=\"var変数を再宣言\";\n// console.log(val1);\n\n// let val2 = \"let変数\";\n// console.log(val2);\n\n// // letは上書きが可能\n// val2 = \"let変数を上書き\";\n// console.log(val2);\n\n// // // letは再宣言不可能\n// // let val2=\"let再宣言\";\n\n// const val3 = \"const変数\";\n// console.log(val3);\n\n// // constは上書きが不可能\n// val3 = \"const変数を上書き\";\n// console.log(val3);\n\n// constで定義したオブジェクトはプロパティの変更が可能\n// const val4 = {\n//   name: \"Shinobi\",\n//   age: 41,\n// }\n// val4.name=\"しのぶ\";\n// val4.address = \"Kanagawa\"\n// console.log(val4);\n\n// constで定義した配列はプロパティの変更が可能\n// const val5=[\"dog\",\"cat\"];\n// val5[0]=\"bird\";\n// val5.push(\"monkey\");\n// console.log(val5);\n\n/**\n * テンプレート文字列\n */\n// const name=\"shinobi\";\n// const age=41;\n\n// // 「私の名前はshinobiです。年齢は41歳です。」\n\n// // 従来の方法\n// // const mesasge1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"歳です。\";\n// // console.log(mesasge1);\n\n// // テンプレート文字列を用いた方法\n// const mesasge2 = `私の名前は${name}です。年齢は${age}歳です。`;\n// console.log(mesasge2);\n\n/**\n * アロー関数\n */\n// 従来の関数\n// function func1(str) {\n//   return str;\n// }\n// const func1 = function(str) {\n//   return str;\n// }\n// console.log(func1(\"func1です\"));\n\n// // アロー関数\n// const func2 = str => str;\n// console.log(func2(\"func2です。\"));\n\n// const func3 = (num1,num2) => {\n//   return num1+num2;\n// }\n// console.log(func3(10,20));\n\n/**\n * 分割代入\n */\n// const myProfile={\n//     name: \"shinobi\",\n//     age: 41,\n// };\n\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\nconst myProfile = [\"shinobi\", 41];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\nconst [name, age] = myProfile;\nconst message4 = `名前は${name}です。年齢は${age}です。`;\nconsole.log(message4);\n\n/**\n * 三項演算子\n */\nconst test1 = 100 > 0 ? \"100が勝っている。\" : \"負けている。\";\nconsole.log (test1);"],"names":["$761f97bf09d51d3e$var$name","$761f97bf09d51d3e$var$age","$761f97bf09d51d3e$var$message4","console","log"],"version":3,"file":"index.fce677da.js.map"}